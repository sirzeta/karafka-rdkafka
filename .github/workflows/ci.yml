name: ci

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
  schedule:
    - cron:  '0 1 * * *'

env:
  BUNDLE_RETRY: 6
  BUNDLE_JOBS: 4

jobs:
  specs:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        ruby:
#          - '3.4.0-preview1'
          - '3.3'
#          - '3.2'
#          - '3.1'
#          - '3.0'
        include:
          - ruby: '3.3'
            coverage: 'true'
    name: Ruby ${{ matrix.ruby }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.os }} package dependencies
        if: matrix.os == 'ubuntu-latest'
        run: "[ -e $APT_DEPS ] || sudo apt-get install -y --no-install-recommends $APT_DEPS"

      - uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          msystem: UCRT64
          update: true
          install: >
            git
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-toolchain

      - name: Setup WSL2
        if: matrix.os == 'windows-latest'
        uses: Vampire/setup-wsl@v3
        with:
          distribution: Ubuntu-22.04

      - name: Start Kafka with docker compose
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            wsl -d Ubuntu-22.04 -- sh -c "docker compose up -d || (sleep 5 && docker compose up -d)"
          else
            docker compose up -d || (sleep 5 && docker compose up -d)
          fi
        shell: bash

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby}}
          bundler-cache: true

      - name: Run all specs
        env:
          GITHUB_COVERAGE: ${{matrix.coverage}}

        run: |
          bundle install --path vendor/bundle
          cd ext && bundle exec rake && cd ..
          bundle exec rspec
